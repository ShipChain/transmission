#!/bin/bash

set -e

# magic line to ensure that we're always inside the root of our application,
# no matter from which directory we'll run script
# thanks to it we can just enter `./bin/docker_tests`
cd "${0%/*}/.."

echo "Running tests"

# Always run dc down regardless of success/failure
trap 'bin/dc down' EXIT

export ROLE=test

bin/dc up -d --remove-orphans

bin/dc exec -T runserver /bin/bash -c '! poetry install --dry-run | grep "Warning: The lock file is not up to date" || (echo "poetry.lock does not match pyproject.toml" && exit 1)'

bin/dc exec -T runserver safety check -i 38224

bin/dc exec -T runserver prospector -o pylint

bin/speccy

bin/openapi_spellcheck

bin/readme_spellcheck

bin/dc exec -T runserver bandit -r apps

bin/dc exec -T runserver pytest -p no:cacheprovider --cov=apps --cov-config=.coveragerc --ds=conf.test_settings --cov-report= tests/profiles_enabled

bin/dc exec -T runserver pytest -p no:cacheprovider --cov=apps --cov-config=.coveragerc --cov-append --ds=conf.test_settings_profiles_disabled tests/profiles_disabled
