version: '3.6'
services:

  minio:
    volumes:
    - /data/shipchain/transmission/minio/data:/data
    - /data/shipchain/transmission/minio/config:/root/.minio

  redis_db:
    volumes:
      - /data/shipchain/transmission/redis:/data

  psql:
    volumes:
      - /data/shipchain/transmission/postgresql:/var/lib/postgresql

  smtp:
    image: elsdoerfer/exim-sender
    environment:
      - PRIMARY_HOST=smtp.shipchain.io.local
      - ALLOWED_HOSTS=*
    expose:
      - "25"

  django_shell: # This is a one-shot command runner service, for manage.py or bash, it dies immediately
    image: transmission-django-dev
    volumes:
      - ../:/app
    links:
      - psql
      - redis_db
      - minio
      - smtp
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - ENV
      - SECRET_KEY
      - SERVICE=django_shell
      - REDIS_URL
      - ENGINE_RPC_URL=http://engine-rpc:2000
      - INTERNAL_URL=http://transmission-runserver:8000
      - PROFILES_URL #http://profiles-runserver:8000
      - ELASTICSEARCH_URL
      - AWS_ACCESS_KEY_ID=TEST-DEV-KEY
      - AWS_SECRET_ACCESS_KEY=NON-TRIVIAL-SECRETKEY
    command: "bash"
    entrypoint: []

  runserver:
    build:
      context: ../
      target: local
    image: transmission-django-dev
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    ports:
      - "8000:8000"
    networks:
      default:
        aliases:
          - transmission-runserver
      portal:
        aliases:
          - transmission-runserver
    links:
      - psql
      - redis_db
      - minio
      - smtp
    volumes:
      - ../:/app
      - ./django/pip.cache:/build/pip.volume
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - ENV
      - SECRET_KEY
      - SERVICE=runserver
      - REDIS_URL
      - ENGINE_RPC_URL=http://engine-rpc:2000
      - INTERNAL_URL=http://transmission-runserver:8000
      - PROFILES_URL #http://profiles-runserver:8000
      - ELASTICSEARCH_URL
      - AWS_ACCESS_KEY_ID=TEST-DEV-KEY
      - AWS_SECRET_ACCESS_KEY=NON-TRIVIAL-SECRETKEY
      - AFTERSHIP_API_KEY
      - TOPIC_ARN
      - LOG_LEVEL
      - FORCE_DEBUG

  celery:
    image: transmission-django-dev
    command: ["watchmedo", "auto-restart", "-d", ".", "-p", "'*.py'", "--", "celery", "worker", "-A", "apps"]
    networks:
      default:
        aliases:
          - transmission-celery
      portal:
        aliases:
          - transmission-celery
    links:
      - psql
      - redis_db
      - minio
    volumes:
      - ../:/app
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - ENV
      - SECRET_KEY
      - SERVICE=celery
      - REDIS_URL
      - ENGINE_RPC_URL=http://engine-rpc:2000
      - INTERNAL_URL=http://transmission-runserver:8000
      - PROFILES_URL #http://profiles-runserver:8000
      - ELASTICSEARCH_URL
      - AWS_ACCESS_KEY_ID=TEST-DEV-KEY
      - AWS_SECRET_ACCESS_KEY=NON-TRIVIAL-SECRETKEY
      - LOG_LEVEL
      - FORCE_DEBUG
    entrypoint: []

  flower:
    image: mher/flower
    command: ["flower", "--broker=redis://:redis_pass@redis_db:6379/1", "--port=8888"]
    environment:
      - CELERYBROKER_URL=redis://redis:6379/0
      - SERVICE=flower
    ports:
      - 8888:8888
    links:
      - celery
      - redis_db
