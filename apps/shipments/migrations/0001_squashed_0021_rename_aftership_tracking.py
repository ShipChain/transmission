# Generated by Django 3.0.8 on 2020-10-08 22:13

import apps.eth.fields
import apps.shipments.models.access_request
import apps.shipments.models.shipment
import apps.simple_history
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_fsm
import enumfields.fields
import shipchain_common.utils
import simple_history.models
import uuid


class Migration(migrations.Migration):

    replaces = [('shipments', '0001_squashed_091919'), ('shipments', '0002_hash_rate_limits'), ('shipments', '0003_add_asset_fields'), ('shipments', '0004_exception_enum'), ('shipments', '0005_use_related_name_for_historical_relation'), ('shipments', '0006_add_geofences'), ('shipments', '0007_add_location_contact_fields'), ('shipments', '0008_shipment_notes'), ('shipments', '0009_add_shipment_assignee_field'), ('shipments', '0010_gtx_required_field'), ('shipments', '0011_add_shipmentnote_organization_name_username_fields'), ('shipments', '0012_shipment_tags'), ('shipments', '0013_telemetrydata'), ('shipments', '0014_add_indexes'), ('shipments', '0015_aftership_fields'), ('shipments', '0016_gtx_validation_fields'), ('shipments', '0017_add_arrival_est'), ('shipments', '0018_db_indexes'), ('shipments', '0019_carrier_abv'), ('shipments', '0020_accessrequest'), ('shipments', '0021_rename_aftership_tracking')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.CharField(default=shipchain_common.utils.random_id, max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('address_1', models.CharField(blank=True, max_length=255, null=True)),
                ('address_2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(message='Invalid phone number.', regex='^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}')])),
                ('fax_number', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(message='Invalid phone number.', regex='^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}')])),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner_id', models.CharField(max_length=36)),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='LoadShipment',
            fields=[
                ('id', models.CharField(default=shipchain_common.utils.random_id, max_length=36, primary_key=True, serialize=False)),
                ('shipment_id', models.IntegerField(blank=True, null=True)),
                ('shipment_amount', models.IntegerField()),
                ('paid_amount', models.IntegerField(default=0)),
                ('paid_tokens', models.DecimalField(decimal_places=18, default=0, max_digits=40)),
                ('shipper', models.CharField(max_length=42)),
                ('carrier', models.CharField(max_length=42)),
                ('moderator', models.CharField(blank=True, max_length=42, null=True)),
                ('contract_funded', models.BooleanField(default=False)),
                ('shipment_created', models.BooleanField(default=False)),
                ('valid_until', models.IntegerField()),
                ('start_block', models.IntegerField(blank=True, null=True)),
                ('end_block', models.IntegerField(blank=True, null=True)),
                ('escrow_funded', models.BooleanField(default=False)),
                ('shipment_committed_by_carrier', models.BooleanField(default=False)),
                ('commitment_confirmed_date', models.IntegerField(blank=True, null=True)),
                ('shipment_completed_by_carrier', models.BooleanField(default=False)),
                ('shipment_accepted_by_shipper', models.BooleanField(default=False)),
                ('shipment_canceled_by_shipper', models.BooleanField(default=False)),
                ('escrow_paid', models.BooleanField(default=False)),
                ('escrow_status', enumfields.fields.EnumField(default=1, enum=apps.shipments.models.shipment.EscrowState, max_length=10)),
                ('funding_type', enumfields.fields.EnumField(default=2, enum=apps.shipments.models.shipment.FundingType, max_length=10)),
                ('shipment_status', enumfields.fields.EnumField(default=0, enum=apps.shipments.models.shipment.ShipmentState, max_length=10)),
                ('vault_hash', models.CharField(max_length=66, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('certificate_id', models.CharField(max_length=255, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Shipment',
            fields=[
                ('id', models.CharField(default=shipchain_common.utils.random_id, max_length=36, primary_key=True, serialize=False)),
                ('owner_id', models.CharField(max_length=36)),
                ('carrier_scac', models.CharField(blank=True, max_length=255, null=True)),
                ('forwarder_scac', models.CharField(blank=True, max_length=255, null=True)),
                ('nvocc_scac', models.CharField(blank=True, max_length=255, null=True)),
                ('shipper_reference', models.CharField(blank=True, max_length=255, null=True)),
                ('forwarder_reference', models.CharField(blank=True, max_length=255, null=True)),
                ('forwarders_shipper_id', models.CharField(blank=True, max_length=255, null=True)),
                ('carrier_instructions', models.CharField(blank=True, max_length=255, null=True)),
                ('pro_number', models.CharField(blank=True, max_length=255, null=True)),
                ('master_bill', models.CharField(blank=True, max_length=255, null=True)),
                ('house_bill', models.CharField(blank=True, max_length=255, null=True)),
                ('subhouse_bill', models.CharField(blank=True, max_length=255, null=True)),
                ('freight_payment_terms', models.CharField(blank=True, max_length=255, null=True)),
                ('vessel_name', models.CharField(blank=True, max_length=255, null=True)),
                ('voyage_number', models.CharField(blank=True, max_length=255, null=True)),
                ('mode', models.CharField(blank=True, max_length=255, null=True)),
                ('number_of_packages', models.IntegerField(blank=True, null=True)),
                ('gross_weight_kgs', models.DecimalField(blank=True, decimal_places=4, max_digits=9, null=True)),
                ('volume_cbms', models.DecimalField(blank=True, decimal_places=4, max_digits=9, null=True)),
                ('container_count', models.IntegerField(blank=True, null=True)),
                ('dimensional_weight', models.DecimalField(blank=True, decimal_places=4, max_digits=9, null=True)),
                ('chargeable_weight', models.DecimalField(blank=True, decimal_places=4, max_digits=9, null=True)),
                ('docs_received_actual', models.DateTimeField(blank=True, null=True)),
                ('docs_approved_actual', models.DateTimeField(blank=True, null=True)),
                ('pickup_appointment_actual', models.DateTimeField(blank=True, null=True)),
                ('pickup_estimated', models.DateTimeField(blank=True, null=True)),
                ('pickup_actual', models.DateTimeField(blank=True, null=True)),
                ('loading_estimated', models.DateTimeField(blank=True, null=True)),
                ('loading_actual', models.DateTimeField(blank=True, null=True)),
                ('departure_estimated', models.DateTimeField(blank=True, null=True)),
                ('departure_actual', models.DateTimeField(blank=True, null=True)),
                ('delivery_appointment_actual', models.DateTimeField(blank=True, null=True)),
                ('arrival_port_estimated', models.DateTimeField(blank=True, null=True)),
                ('arrival_port_actual', models.DateTimeField(blank=True, null=True)),
                ('delivery_estimated', models.DateTimeField(blank=True, null=True)),
                ('delivery_actual', models.DateTimeField(blank=True, null=True)),
                ('last_attempted_delivery_actual', models.DateTimeField(blank=True, null=True)),
                ('cancel_requested_date_actual', models.DateTimeField(blank=True, null=True)),
                ('cancel_confirmed_date_actual', models.DateTimeField(blank=True, null=True)),
                ('customs_filed_date_actual', models.DateTimeField(blank=True, null=True)),
                ('customs_hold_date_actual', models.DateTimeField(blank=True, null=True)),
                ('customs_release_date_actual', models.DateTimeField(blank=True, null=True)),
                ('containerization_type', models.CharField(blank=True, max_length=255, null=True)),
                ('arrival_unlocode', models.CharField(blank=True, max_length=255, null=True)),
                ('final_port_unlocode', models.CharField(blank=True, max_length=255, null=True)),
                ('import_unlocode', models.CharField(blank=True, max_length=255, null=True)),
                ('lading_unlocode', models.CharField(blank=True, max_length=255, null=True)),
                ('origin_unlocode', models.CharField(blank=True, max_length=255, null=True)),
                ('us_routed_export', models.CharField(blank=True, max_length=255, null=True)),
                ('import_customs_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('us_customs_export_port', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer_fields', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('final_destination_location', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='shipment_dest', to='shipments.Location')),
                ('ship_from_location', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='shipment_from', to='shipments.Location')),
                ('ship_to_location', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='shipment_to', to='shipments.Location')),
                ('carrier_wallet_id', models.CharField(max_length=36)),
                ('shipper_wallet_id', models.CharField(max_length=36)),
                ('storage_credentials_id', models.CharField(max_length=36)),
                ('vault_id', models.CharField(max_length=36, null=True)),
                ('load_data', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='shipments.LoadShipment')),
                ('contract_version', models.CharField(max_length=36)),
                ('device', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='shipments.Device')),
            ],
            options={
                'ordering': ('created_at',),
            },
        ),
        migrations.RunSQL(
            sql='SET CONSTRAINTS ALL IMMEDIATE',
            reverse_sql='',
        ),
        migrations.RemoveField(
            model_name='shipment',
            name='load_data',
        ),
        migrations.RenameField(
            model_name='loadshipment',
            old_name='paid_amount',
            new_name='funded_amount',
        ),
        migrations.RenameField(
            model_name='loadshipment',
            old_name='shipment_status',
            new_name='shipment_state',
        ),
        migrations.RemoveField(
            model_name='loadshipment',
            name='commitment_confirmed_date',
        ),
        migrations.RemoveField(
            model_name='loadshipment',
            name='contract_funded',
        ),
        migrations.RemoveField(
            model_name='loadshipment',
            name='end_block',
        ),
        migrations.RemoveField(
            model_name='loadshipment',
            name='escrow_funded',
        ),
        migrations.RemoveField(
            model_name='loadshipment',
            name='escrow_paid',
        ),
        migrations.RemoveField(
            model_name='loadshipment',
            name='escrow_status',
        ),
        migrations.RemoveField(
            model_name='loadshipment',
            name='id',
        ),
        migrations.RemoveField(
            model_name='loadshipment',
            name='paid_tokens',
        ),
        migrations.RemoveField(
            model_name='loadshipment',
            name='shipment_accepted_by_shipper',
        ),
        migrations.RemoveField(
            model_name='loadshipment',
            name='shipment_amount',
        ),
        migrations.RemoveField(
            model_name='loadshipment',
            name='shipment_canceled_by_shipper',
        ),
        migrations.RemoveField(
            model_name='loadshipment',
            name='shipment_committed_by_carrier',
        ),
        migrations.RemoveField(
            model_name='loadshipment',
            name='shipment_completed_by_carrier',
        ),
        migrations.RemoveField(
            model_name='loadshipment',
            name='shipment_created',
        ),
        migrations.RemoveField(
            model_name='loadshipment',
            name='shipment_id',
        ),
        migrations.RemoveField(
            model_name='loadshipment',
            name='start_block',
        ),
        migrations.RemoveField(
            model_name='loadshipment',
            name='valid_until',
        ),
        migrations.AddField(
            model_name='loadshipment',
            name='contracted_amount',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='loadshipment',
            name='created_at',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='loadshipment',
            name='escrow_state',
            field=enumfields.fields.EnumField(default=0, enum=apps.shipments.models.shipment.EscrowState, max_length=10),
        ),
        migrations.AddField(
            model_name='loadshipment',
            name='refund_address',
            field=apps.eth.fields.AddressField(default='0x0', max_length=42, validators=[django.core.validators.RegexValidator(message='Invalid address.', regex='^0x([A-Fa-f0-9]{40})$')]),
        ),
        migrations.AddField(
            model_name='loadshipment',
            name='vault_uri',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AlterField(
            model_name='loadshipment',
            name='carrier',
            field=apps.eth.fields.AddressField(default='0x0', max_length=42, validators=[django.core.validators.RegexValidator(message='Invalid address.', regex='^0x([A-Fa-f0-9]{40})$')]),
        ),
        migrations.AlterField(
            model_name='loadshipment',
            name='funding_type',
            field=enumfields.fields.EnumField(default=0, enum=apps.shipments.models.shipment.FundingType, max_length=10),
        ),
        migrations.AlterField(
            model_name='loadshipment',
            name='moderator',
            field=apps.eth.fields.AddressField(default='0x0', max_length=42, validators=[django.core.validators.RegexValidator(message='Invalid address.', regex='^0x([A-Fa-f0-9]{40})$')]),
        ),
        migrations.AlterField(
            model_name='loadshipment',
            name='shipper',
            field=apps.eth.fields.AddressField(default='0x0', max_length=42, validators=[django.core.validators.RegexValidator(message='Invalid address.', regex='^0x([A-Fa-f0-9]{40})$')]),
        ),
        migrations.AlterField(
            model_name='loadshipment',
            name='vault_hash',
            field=apps.eth.fields.HashField(default='', max_length=66, validators=[django.core.validators.RegexValidator(message='Invalid hash.', regex='^0x([A-Fa-f0-9]{64})$')]),
        ),
        migrations.AddField(
            model_name='loadshipment',
            name='shipment',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='shipments.Shipment'),
        ),
        migrations.RunSQL(
            sql='',
            reverse_sql='SET CONSTRAINTS ALL IMMEDIATE',
        ),
        migrations.AddField(
            model_name='shipment',
            name='moderator_wallet_id',
            field=models.CharField(max_length=36, null=True),
        ),
        migrations.AddField(
            model_name='shipment',
            name='vault_uri',
            field=models.CharField(max_length=255, null=True),
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='house_bill',
            new_name='bill_house',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='master_bill',
            new_name='bill_master',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='subhouse_bill',
            new_name='bill_subhouse',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='carrier_instructions',
            new_name='carriers_instructions',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='carrier_scac',
            new_name='carriers_scac',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='container_count',
            new_name='container_qty',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='containerization_type',
            new_name='container_type',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='delivery_actual',
            new_name='delivery_act',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='delivery_appointment_actual',
            new_name='delivery_appt_act',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='last_attempted_delivery_actual',
            new_name='delivery_attempt',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='delivery_estimated',
            new_name='delivery_est',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='departure_actual',
            new_name='departure_act',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='departure_estimated',
            new_name='departure_est',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='final_port_unlocode',
            new_name='final_port_locode',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='forwarder_reference',
            new_name='forwarders_reference',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='import_unlocode',
            new_name='import_locode',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='lading_unlocode',
            new_name='lading_locode',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='loading_actual',
            new_name='loading_act',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='loading_estimated',
            new_name='loading_est',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='mode',
            new_name='mode_of_transport_code',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='origin_unlocode',
            new_name='origin_locode',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='number_of_packages',
            new_name='package_qty',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='freight_payment_terms',
            new_name='payment_terms',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='pickup_appointment_actual',
            new_name='pickup_appt',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='pickup_estimated',
            new_name='pickup_est',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='arrival_port_estimated',
            new_name='port_arrival_est',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='arrival_unlocode',
            new_name='port_arrival_locode',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='shipper_reference',
            new_name='shippers_reference',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='us_customs_export_port',
            new_name='us_export_port',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='us_routed_export',
            new_name='us_routed',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='volume_cbms',
            new_name='volume',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='gross_weight_kgs',
            new_name='weight_gross',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='cancel_confirmed_date_actual',
            new_name='cancel_confirmed_date_act',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='cancel_requested_date_actual',
            new_name='cancel_requested_date_act',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='customs_filed_date_actual',
            new_name='customs_filed_date_act',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='customs_hold_date_actual',
            new_name='customs_hold_date_act',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='customs_release_date_actual',
            new_name='customs_release_date_act',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='docs_approved_actual',
            new_name='docs_approved_act',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='docs_received_actual',
            new_name='docs_received_act',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='pickup_actual',
            new_name='pickup_act',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='arrival_port_actual',
            new_name='port_arrival_act',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='dimensional_weight',
            new_name='weight_dim',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='forwarders_shipper_id',
            new_name='forwarders_shipper_id',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='forwarder_scac',
            new_name='forwarders_scac',
        ),
        migrations.RenameField(
            model_name='shipment',
            old_name='chargeable_weight',
            new_name='weight_chargeable',
        ),
        migrations.AddField(
            model_name='shipment',
            name='version',
            field=models.CharField(default='1.2.3', max_length=255),
        ),
        migrations.CreateModel(
            name='PermissionLink',
            fields=[
                ('id', models.CharField(default=shipchain_common.utils.random_id, max_length=36, primary_key=True, serialize=False)),
                ('expiration_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('shipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shipments.Shipment')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.AddField(
            model_name='shipment',
            name='nmfc_class',
            field=models.CharField(blank=True, max_length=4, null=True, validators=[django.core.validators.RegexValidator(message='Invalid nmfc class number.', regex='^1[015]0$|^1[27]5$|^2[05]0$|^[345]00$|^[567]0$|^[568]5$|^92\\.5$|^77\\.5$')]),
        ),
        migrations.AddField(
            model_name='shipment',
            name='seal_number',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='shipment',
            name='special_instructions',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='shipment',
            name='trailer_number',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='shipment',
            name='bill_to_location',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='shipment_bill', to='shipments.Location'),
        ),
        migrations.RemoveField(
            model_name='shipment',
            name='us_routed',
        ),
        migrations.AddField(
            model_name='shipment',
            name='us_routed',
            field=models.NullBooleanField(),
        ),
        migrations.AddField(
            model_name='shipment',
            name='is_hazmat',
            field=models.NullBooleanField(),
        ),
        migrations.AddField(
            model_name='shipment',
            name='is_master_bol',
            field=models.NullBooleanField(),
        ),
        migrations.AddField(
            model_name='shipment',
            name='updated_by',
            field=models.CharField(max_length=36, null=True),
        ),
        migrations.RemoveField(
            model_name='location',
            name='owner_id',
        ),
        migrations.AlterField(
            model_name='location',
            name='country',
            field=models.CharField(blank=True, max_length=2, null=True, validators=[django.core.validators.RegexValidator(message='Invalid ISO 3166-1 alpha-2 country code.', regex='^A[^ABCHJKNPVY]|B[^CKPUX]|C[^BEJPQST]|D[EJKMOZ]|E[CEGHRST]|F[IJKMOR]|G[^CJKOVXZ]|H[KMNRTU]|I[DEL-OQ-T]|J[EMOP]|K[EGHIMNPRWYZ]|L[ABCIKR-VY]|M[^BIJ]|N[ACEFGILOPRUZ]|OM|P[AE-HK-NRSTWY]|QA|R[EOSUW]|S[^FPQUW]|T[^ABEIPQSUXY]|U[AGMSYZ]|V[ACEGINU]|WF|WS|YE|YT|Z[AMW]')]),
        ),
        migrations.CreateModel(
            name='TrackingData',
            fields=[
                ('id', models.CharField(default=shipchain_common.utils.random_id, max_length=36, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('latitude', models.FloatField(max_length=36)),
                ('longitude', models.FloatField(max_length=36)),
                ('altitude', models.FloatField(blank=True, max_length=36, null=True)),
                ('source', models.CharField(max_length=36)),
                ('uncertainty', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('speed', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('timestamp', models.DateTimeField()),
                ('version', models.CharField(max_length=36)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shipments.Device')),
                ('shipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shipments.Shipment')),
                ('point', django.contrib.gis.db.models.fields.GeometryField(srid=4326)),
            ],
            options={
                'ordering': ('timestamp',),
            },
        ),
        migrations.CreateModel(
            name='HistoricalLocation',
            fields=[
                ('id', models.CharField(db_index=True, default=shipchain_common.utils.random_id, max_length=36)),
                ('name', models.CharField(max_length=255)),
                ('address_1', models.CharField(blank=True, max_length=255, null=True)),
                ('address_2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=2, null=True, validators=[django.core.validators.RegexValidator(message='Invalid ISO 3166-1 alpha-2 country code.', regex='^A[^ABCHJKNPVY]|B[^CKPUX]|C[^BEJPQST]|D[EJKMOZ]|E[CEGHRST]|F[IJKMOR]|G[^CJKOVXZ]|H[KMNRTU]|I[DEL-OQ-T]|J[EMOP]|K[EGHIMNPRWYZ]|L[ABCIKR-VY]|M[^BIJ]|N[ACEFGILOPRUZ]|OM|P[AE-HK-NRSTWY]|QA|R[EOSUW]|S[^FPQUW]|T[^ABEIPQSUXY]|U[AGMSYZ]|V[ACEGINU]|WF|WS|YE|YT|Z[AMW]')])),
                ('postal_code', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(message='Invalid phone number.', regex='^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}')])),
                ('fax_number', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(message='Invalid phone number.', regex='^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}')])),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(null=True, srid=4326)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.CharField(blank=True, max_length=36, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'historical location',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apps.simple_history.HistoricalChangesMixin),
        ),
        migrations.AddField(
            model_name='shipment',
            name='delayed',
            field=models.BooleanField(default=False, editable=False),
        ),
        migrations.AddField(
            model_name='shipment',
            name='expected_delay_hours',
            field=models.IntegerField(default=0, editable=False),
        ),
        migrations.AddField(
            model_name='shipment',
            name='state',
            field=django_fsm.FSMIntegerField(default=10, protected=True),
        ),
        migrations.AlterField(
            model_name='shipment',
            name='delivery_act',
            field=models.DateTimeField(blank=True, editable=False, null=True),
        ),
        migrations.AlterField(
            model_name='shipment',
            name='pickup_act',
            field=models.DateTimeField(blank=True, editable=False, null=True),
        ),
        migrations.AlterField(
            model_name='shipment',
            name='port_arrival_act',
            field=models.DateTimeField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='shipment',
            name='background_data_hash_interval',
            field=models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='shipment',
            name='manual_update_hash_interval',
            field=models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='shipment',
            name='asset_custodian_id',
            field=models.CharField(max_length=36, null=True),
        ),
        migrations.AddField(
            model_name='shipment',
            name='asset_physical_id',
            field=models.CharField(max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='shipment',
            name='exception',
            field=enumfields.fields.EnumIntegerField(default=0, enum=apps.shipments.models.shipment.ExceptionType),
        ),
        migrations.AddField(
            model_name='shipment',
            name='geofences',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=36, null=True), blank=True, null=True, size=None),
        ),
        migrations.AddField(
            model_name='location',
            name='contact_email',
            field=models.EmailField(blank=True, max_length=254, null=True),
        ),
        migrations.AddField(
            model_name='location',
            name='contact_name',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='shipment',
            name='assignee_id',
            field=models.UUIDField(null=True),
        ),
        migrations.CreateModel(
            name='HistoricalShipment',
            fields=[
                ('id', models.CharField(db_index=True, default=shipchain_common.utils.random_id, max_length=36)),
                ('owner_id', models.CharField(max_length=36)),
                ('storage_credentials_id', models.CharField(max_length=36)),
                ('vault_id', models.CharField(max_length=36, null=True)),
                ('vault_uri', models.CharField(max_length=255, null=True)),
                ('shipper_wallet_id', models.CharField(max_length=36)),
                ('carrier_wallet_id', models.CharField(max_length=36)),
                ('moderator_wallet_id', models.CharField(max_length=36, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('contract_version', models.CharField(max_length=36)),
                ('updated_by', models.CharField(max_length=36, null=True)),
                ('carriers_scac', models.CharField(blank=True, max_length=255, null=True)),
                ('forwarders_scac', models.CharField(blank=True, max_length=255, null=True)),
                ('nvocc_scac', models.CharField(blank=True, max_length=255, null=True)),
                ('shippers_reference', models.CharField(blank=True, max_length=255, null=True)),
                ('forwarders_reference', models.CharField(blank=True, max_length=255, null=True)),
                ('forwarders_shipper_id', models.CharField(blank=True, max_length=255, null=True)),
                ('carriers_instructions', models.CharField(blank=True, max_length=255, null=True)),
                ('special_instructions', models.CharField(blank=True, max_length=255, null=True)),
                ('pro_number', models.CharField(blank=True, max_length=255, null=True)),
                ('bill_master', models.CharField(blank=True, max_length=255, null=True)),
                ('bill_house', models.CharField(blank=True, max_length=255, null=True)),
                ('bill_subhouse', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_terms', models.CharField(blank=True, max_length=255, null=True)),
                ('vessel_name', models.CharField(blank=True, max_length=255, null=True)),
                ('voyage_number', models.CharField(blank=True, max_length=255, null=True)),
                ('mode_of_transport_code', models.CharField(blank=True, max_length=255, null=True)),
                ('package_qty', models.IntegerField(blank=True, null=True)),
                ('weight_gross', models.DecimalField(blank=True, decimal_places=4, max_digits=9, null=True)),
                ('volume', models.DecimalField(blank=True, decimal_places=4, max_digits=9, null=True)),
                ('container_qty', models.IntegerField(blank=True, null=True)),
                ('weight_dim', models.DecimalField(blank=True, decimal_places=4, max_digits=9, null=True)),
                ('weight_chargeable', models.DecimalField(blank=True, decimal_places=4, max_digits=9, null=True)),
                ('docs_received_act', models.DateTimeField(blank=True, null=True)),
                ('docs_approved_act', models.DateTimeField(blank=True, null=True)),
                ('pickup_appt', models.DateTimeField(blank=True, null=True)),
                ('pickup_est', models.DateTimeField(blank=True, null=True)),
                ('pickup_act', models.DateTimeField(blank=True, editable=False, null=True)),
                ('loading_est', models.DateTimeField(blank=True, null=True)),
                ('loading_act', models.DateTimeField(blank=True, null=True)),
                ('departure_est', models.DateTimeField(blank=True, null=True)),
                ('departure_act', models.DateTimeField(blank=True, null=True)),
                ('delivery_appt_act', models.DateTimeField(blank=True, null=True)),
                ('port_arrival_est', models.DateTimeField(blank=True, null=True)),
                ('port_arrival_act', models.DateTimeField(blank=True, editable=False, null=True)),
                ('delivery_est', models.DateTimeField(blank=True, null=True)),
                ('delivery_act', models.DateTimeField(blank=True, editable=False, null=True)),
                ('delivery_attempt', models.DateTimeField(blank=True, null=True)),
                ('cancel_requested_date_act', models.DateTimeField(blank=True, null=True)),
                ('cancel_confirmed_date_act', models.DateTimeField(blank=True, null=True)),
                ('customs_filed_date_act', models.DateTimeField(blank=True, null=True)),
                ('customs_hold_date_act', models.DateTimeField(blank=True, null=True)),
                ('customs_release_date_act', models.DateTimeField(blank=True, null=True)),
                ('container_type', models.CharField(blank=True, max_length=255, null=True)),
                ('port_arrival_locode', models.CharField(blank=True, max_length=255, null=True)),
                ('final_port_locode', models.CharField(blank=True, max_length=255, null=True)),
                ('import_locode', models.CharField(blank=True, max_length=255, null=True)),
                ('lading_locode', models.CharField(blank=True, max_length=255, null=True)),
                ('origin_locode', models.CharField(blank=True, max_length=255, null=True)),
                ('us_routed', models.NullBooleanField()),
                ('import_customs_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('us_export_port', models.CharField(blank=True, max_length=255, null=True)),
                ('version', models.CharField(default='1.2.3', max_length=255)),
                ('trailer_number', models.CharField(blank=True, max_length=255, null=True)),
                ('seal_number', models.CharField(blank=True, max_length=255, null=True)),
                ('is_master_bol', models.NullBooleanField()),
                ('nmfc_class', models.CharField(blank=True, max_length=4, null=True, validators=[django.core.validators.RegexValidator(message='Invalid nmfc class number.', regex='^1[015]0$|^1[27]5$|^2[05]0$|^[345]00$|^[567]0$|^[568]5$|^92\\.5$|^77\\.5$')])),
                ('is_hazmat', models.NullBooleanField()),
                ('customer_fields', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.CharField(blank=True, max_length=36, null=True)),
                ('bill_to_location', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='shipment_bill', to='shipments.HistoricalLocation')),
                ('device', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shipments.Device')),
                ('final_destination_location', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='shipment_dest', to='shipments.HistoricalLocation')),
                ('ship_from_location', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='shipment_from', to='shipments.HistoricalLocation')),
                ('ship_to_location', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='shipment_to', to='shipments.HistoricalLocation')),
                ('delayed', models.BooleanField(default=False, editable=False)),
                ('exception', enumfields.fields.EnumIntegerField(default=0, enum=apps.shipments.models.shipment.ExceptionType)),
                ('expected_delay_hours', models.IntegerField(default=0, editable=False)),
                ('state', django_fsm.FSMIntegerField(default=10, protected=True)),
                ('background_data_hash_interval', models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('manual_update_hash_interval', models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('asset_custodian_id', models.CharField(max_length=36, null=True)),
                ('asset_physical_id', models.CharField(max_length=255, null=True)),
                ('geofences', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=36, null=True), blank=True, null=True, size=None)),
                ('assignee_id', models.UUIDField(null=True)),
                ('gtx_required', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'historical shipment',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apps.simple_history.HistoricalChangesMixin),
        ),
        migrations.AddField(
            model_name='shipment',
            name='gtx_required',
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name='ShipmentNote',
            fields=[
                ('id', models.CharField(default=shipchain_common.utils.random_id, max_length=36, primary_key=True, serialize=False)),
                ('message', models.TextField(validators=[django.core.validators.MaxLengthValidator(500), django.core.validators.MinLengthValidator(1)])),
                ('user_id', models.CharField(max_length=36)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('shipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shipments.Shipment')),
                ('organization_name', models.CharField(max_length=80, null=True)),
                ('username', models.CharField(max_length=150, null=True)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ShipmentTag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tag_type', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='Space(s) not allowed in this field', regex='^\\S*$')])),
                ('tag_value', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='Space(s) not allowed in this field', regex='^\\S*$')])),
                ('owner_id', models.UUIDField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('shipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shipment_tags', to='shipments.Shipment')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.AddConstraint(
            model_name='shipmenttag',
            constraint=models.UniqueConstraint(fields=('tag_type', 'tag_value', 'shipment'), name='unique_tag_definition_for_shipment'),
        ),
        migrations.AlterField(
            model_name='historicallocation',
            name='history_date',
            field=models.DateTimeField(db_index=True),
        ),
        migrations.AlterField(
            model_name='historicalshipment',
            name='history_date',
            field=models.DateTimeField(db_index=True),
        ),
        migrations.CreateModel(
            name='TelemetryData',
            fields=[
                ('id', models.CharField(default=shipchain_common.utils.random_id, max_length=36, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('timestamp', models.DateTimeField(db_index=True)),
                ('hardware_id', models.CharField(max_length=255)),
                ('sensor_id', models.CharField(max_length=36)),
                ('version', models.CharField(max_length=36)),
                ('value', models.FloatField()),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shipments.Device')),
                ('shipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shipments.Shipment')),
            ],
            options={
                'ordering': ('timestamp',),
            },
        ),
        migrations.AlterField(
            model_name='trackingdata',
            name='timestamp',
            field=models.DateTimeField(db_index=True),
        ),
        migrations.AddField(
            model_name='shipment',
            name='quickadd_tracking',
            field=models.CharField(max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='historicalshipment',
            name='gtx_validation',
            field=enumfields.fields.EnumIntegerField(default=0, enum=apps.shipments.models.shipment.GTXValidation),
        ),
        migrations.AddField(
            model_name='historicalshipment',
            name='gtx_validation_timestamp',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='shipment',
            name='gtx_validation',
            field=enumfields.fields.EnumIntegerField(default=0, enum=apps.shipments.models.shipment.GTXValidation),
        ),
        migrations.AddField(
            model_name='shipment',
            name='gtx_validation_timestamp',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='historicalshipment',
            name='arrival_est',
            field=models.DateTimeField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='shipment',
            name='arrival_est',
            field=models.DateTimeField(blank=True, editable=False, null=True),
        ),
        migrations.AlterField(
            model_name='historicalshipment',
            name='carrier_wallet_id',
            field=models.CharField(db_index=True, max_length=36),
        ),
        migrations.AlterField(
            model_name='historicalshipment',
            name='moderator_wallet_id',
            field=models.CharField(db_index=True, max_length=36, null=True),
        ),
        migrations.AlterField(
            model_name='historicalshipment',
            name='shipper_wallet_id',
            field=models.CharField(db_index=True, max_length=36),
        ),
        migrations.AlterField(
            model_name='historicalshipment',
            name='state',
            field=django_fsm.FSMIntegerField(db_index=True, default=10, protected=True),
        ),
        migrations.AlterField(
            model_name='shipment',
            name='carrier_wallet_id',
            field=models.CharField(db_index=True, max_length=36),
        ),
        migrations.AlterField(
            model_name='shipment',
            name='moderator_wallet_id',
            field=models.CharField(db_index=True, max_length=36, null=True),
        ),
        migrations.AlterField(
            model_name='shipment',
            name='shipper_wallet_id',
            field=models.CharField(db_index=True, max_length=36),
        ),
        migrations.AlterField(
            model_name='shipment',
            name='state',
            field=django_fsm.FSMIntegerField(db_index=True, default=10, protected=True),
        ),
        migrations.AddField(
            model_name='historicalshipment',
            name='carrier_abbv',
            field=models.CharField(max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='shipment',
            name='carrier_abbv',
            field=models.CharField(max_length=100, null=True),
        ),
        migrations.CreateModel(
            name='AccessRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('requester_id', models.UUIDField(editable=False)),
                ('shipment_permission', enumfields.fields.EnumIntegerField(default=1, enum=apps.shipments.models.access_request.PermissionLevel)),
                ('tags_permission', enumfields.fields.EnumIntegerField(default=1, enum=apps.shipments.models.access_request.PermissionLevel)),
                ('documents_permission', enumfields.fields.EnumIntegerField(default=1, enum=apps.shipments.models.access_request.PermissionLevel)),
                ('notes_permission', enumfields.fields.EnumIntegerField(default=1, enum=apps.shipments.models.access_request.PermissionLevel)),
                ('tracking_permission', enumfields.fields.EnumIntegerField(default=1, enum=apps.shipments.models.access_request.PermissionLevel)),
                ('telemetry_permission', enumfields.fields.EnumIntegerField(default=1, enum=apps.shipments.models.access_request.PermissionLevel)),
                ('approved', models.NullBooleanField(default=None)),
                ('approved_at', models.DateTimeField(default=None, editable=False, null=True)),
                ('approved_by', models.UUIDField(default=None, editable=False, null=True)),
                ('shipment', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='shipments.Shipment')),
            ],
            options={
                'ordering': ('created_at',),
            },
        ),
        migrations.AddField(
            model_name='historicalshipment',
            name='quickadd_tracking',
            field=models.CharField(max_length=100, null=True),
        ),
    ]
