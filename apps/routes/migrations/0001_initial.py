# Generated by Django 2.2.13 on 2020-07-09 16:13

import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import shipchain_common.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('shipments', '0018_db_indexes'),
    ]

    operations = [
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.CharField(default=shipchain_common.utils.random_id, max_length=36, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner_id', models.UUIDField()),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('driver_id', models.UUIDField(null=True)),
                ('device', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='shipments.Device')),
            ],
            options={
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='RouteTrackingData',
            fields=[
                ('id', models.CharField(default=shipchain_common.utils.random_id, max_length=36, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('latitude', models.FloatField(max_length=36)),
                ('longitude', models.FloatField(max_length=36)),
                ('altitude', models.FloatField(blank=True, max_length=36, null=True)),
                ('source', models.CharField(max_length=36)),
                ('uncertainty', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('speed', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('timestamp', models.DateTimeField(db_index=True)),
                ('version', models.CharField(max_length=36)),
                ('point', django.contrib.gis.db.models.fields.GeometryField(srid=4326)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shipments.Device')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='routes.Route')),
            ],
            options={
                'ordering': ('timestamp',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RouteTelemetryData',
            fields=[
                ('id', models.CharField(default=shipchain_common.utils.random_id, max_length=36, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('timestamp', models.DateTimeField(db_index=True)),
                ('hardware_id', models.CharField(max_length=255)),
                ('sensor_id', models.CharField(max_length=36)),
                ('value', models.FloatField()),
                ('version', models.CharField(max_length=36)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shipments.Device')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='routes.Route')),
            ],
            options={
                'ordering': ('timestamp',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RouteLeg',
            fields=[
                ('id', models.CharField(default=shipchain_common.utils.random_id, max_length=36, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='routes.Route')),
                ('shipment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='shipments.Shipment')),
            ],
            options={
                'order_with_respect_to': 'route',
            },
        ),
    ]
