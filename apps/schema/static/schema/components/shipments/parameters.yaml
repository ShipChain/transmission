path:
  required: true
  name: shipment_id
  in: path
  description: ID of the Shipment
  schema:
    $ref: '#/dataTypes/uuid'

asPoint:
  name: as_point
  in: query
  description: Returns tracking data as points
  schema:
    type: string

asLine:
  name: as_line
  in: query
  description: Returns tracking data as line
  schema:
    type: string

hasAftsTracking:
  name: has_afts_tracking
  in: query
  description: Returns shipments with the field `afts_tracking`.
  schema:
    type: boolean
    example: true

has_ship_from_location:
  name: has_ship_from_location
  in: query
  description: Returns shipments with associated ship_from_location objects.
  schema:
    type: boolean
    example: true

has_ship_to_location:
  name: has_ship_to_location
  in: query
  description: Returns shipments with associated ship_to_location objects.
  schema:
    type: boolean
    example: true

has_final_destination_location:
  name: has_final_destination_location
  in: query
  description: Returns shipments with associated final_destination_location objects.
  schema:
    type: boolean
    example: true

ship_to_location__city:
  name: ship_to_location__city
  in: query
  description: Returns shipments with associated ship_to_location city.
  schema:
    type: string
    example: Greenville

ship_to_location__state:
  name: ship_to_location__state
  in: query
  description: Returns shipments with associated ship_to_location state.
  schema:
    type: string
    example: South Carolina

ship_to_location__postal_code:
  name: ship_to_location__postal_code
  in: query
  description: Returns shipments with associated ship_to_location postal code.
  schema:
    type: string
    example: 29601

ship_to_location__country:
  name: ship_to_location__country
  in: query
  description: Returns shipments with associated ship_to_location country.
  schema:
    type: string
    example: US

ship_from_location__city:
  name: ship_from_location__city
  in: query
  description: Returns shipments with associated ship_from_location city.
  schema:
    type: string
    example: Greenville

ship_from_location__state:
  name: ship_from_location__state
  in: query
  description: Returns shipments with associated ship_from_location state.
  schema:
    type: string
    example: South Carolina

ship_from_location__postal_code:
  name: ship_from_location__postal_code
  in: query
  description: Returns shipments with associated ship_from_location postal code.
  schema:
    type: string
    example: 29601

ship_from_location__country:
  name: ship_from_location__country
  in: query
  description: Returns shipments with associated ship_from_location country.
  schema:
    type: string
    example: US

final_destination_location__city:
  name: final_destination_location__city
  in: query
  description: Returns shipments with associated final_destination_location city.
  schema:
    type: string
    example: Greenville

final_destination_location__state:
  name: final_destination_location__state
  in: query
  description: Returns shipments with associated final_destination_location state.
  schema:
    type: string
    example: South Carolina

final_destination_location__postal_code:
  name: final_destination_location__postal_code
  in: query
  description: Returns shipments with associated final_destination_location postal code.
  schema:
    type: string
    example: 29601

final_destination_location__country:
  name: final_destination_location__country
  in: query
  description: Returns shipments with associated final_destination_location country.
  schema:
    type: string
    example: US

tag_type:
  name: tag_type
  in: query
  description: >
    Returns shipments for which an associated  ShipmentTag.tag_type field contains the string fragment provided. This lookup is case insensitive.
  schema:
    type: string
    example: Export

tag_value:
  name: tag_value
  in: query
  description: >
    Returns shipments for which an associated ShipmentTag.tag_value field contains the string fragment provided. This lookup is case insensitive.
  schema:
    type: string
    example: Europe

state:
  name: state
  in: query
  description: Returns shipments with the provided transit state.
  schema:
    type: string
    enum: [AWAITING_PICKUP, IN_TRANSIT, AWAITING_DELIVERY, DELIVERED]
    example: AWAITING_PICKUP

exception:
  name: exception
  in: query
  description: Returns shipments with the provided exception state.
  schema:
    type: string
    enum: [NONE, CUSTOMS_HOLD, DOCUMENTATION_ERROR]
    example: CUSTOMS_HOLD

gtxValidation:
  name: gtx_validation
  in: query
  description: Returns shipments with the provided gtx_validation status.
  schema:
    type: string
    enum: [NOT_APPLICABLE, VALIDATION_FAILED, VALIDATED]
    example: VALIDATION_FAILED

delayed:
  name: delayed
  in: query
  description: Returns shipments that are delayed, based on boolean value.
  schema:
    type: boolean
    example: true

permissionLinkId:
  name: permission_link
  in: query
  description: When included and valid, a permission link parameter provides unauthenticated read-only access to a shipment.
  schema:
    $ref: '#/dataTypes/uuid'

permissionLinkPath:
  required: true
  name: permission_link_id
  in: path
  description: Id of the Permission Link.
  schema:
    $ref: '#/dataTypes/uuid'

asset_physical_id:
  name: asset_physical_id
  in: query
  description: Returns shipments with associated asset physical ID.
  schema:
    type: string
    example: c150b0b3f37a4fea11741e0adf253efa8e4870511d283d9a0d034ec0179feaa2

asset_custodian_id:
  name: asset_custodian_id
  in: query
  description: Returns shipments with associated asset custodian ID.
  schema:
    type: string
    example: c150b0b3f37a4fea11741e0adf253efa8e4870511d283d9a0d034ec0179feaa2

assignee_id:
  name: assignee_id
  in: query
  description: UUID of the user assigned to pick up this shipment
  schema:
    type: string
    example: 3341e506-a23b-4eb8-a645-70fee41a1798

customer_fields__has_key:
  name: customer_fields__has_key
  in: query
  description: Returns shipments that have specified key in their customer fields attribute
  schema:
    type: string
    example: driverStatus

customer_fields__{key}:
  name: customer_fields__{key}
  in: query
  description: Returns shipments that have specified key and value in their customer fields attribute
  schema:
    type: string
    example: active

hardwareId:
  required: false
  name: hardware_id
  in: query
  description: hardware ID of the device sensor
  schema:
    type: string
    example: 28FF5DDC631603C7

sensorId:
  required: false
  name: sensor_id
  in: query
  description: ID of the device sensors
  schema:
    $ref: '#/dataTypes/uuid'


after:
  required: false
  name: after
  in: query
  description: Minimum timestamp of desired telemetry data
  schema:
    type: string
    format: date-time
    example: '2018-06-18T14:54:56.652732Z'


before:
  required: false
  name: before
  in: query
  description: Maximum timestamp of desired telemetry data
  schema:
    type: string
    format: date-time
    example: '2018-06-18T14:54:56.652732Z'


aftsTracking:
  required: false
  name: afts_tracking
  in: query
  description: Tracking Number for shipment added via quickadd
  schema:
    type: string
    example: 5b766a5cc7c33c0e007de3c9


aggregate:
  required: false
  name: aggregate
  in: query
  description: Aggregation of telemetry data. Additionally requires `per` query parameter.
  schema:
    type: string
    enum: [minimum, maximum, average]
    example: average


per:
  required: false
  name: per
  in: query
  description: Truncation of telemetry data. Additionally requires `aggregate` query parameter.
  schema:
    type: string
    enum: [minutes, hours, days]
    example: minutes

dataTypes:
  $ref: ../core/dataTypes.yaml
